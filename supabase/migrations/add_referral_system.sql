
-- Add referral_code and referred_by to profiles table
ALTER TABLE profiles
ADD COLUMN referral_code TEXT UNIQUE,
ADD COLUMN referred_by UUID REFERENCES profiles(id);

-- Create the referrals table
CREATE TABLE referrals (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    referrer_id UUID NOT NULL REFERENCES profiles(id),
    referred_user_email TEXT NOT NULL,
    status TEXT NOT NULL DEFAULT 'pending', -- pending, completed, expired
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Add index for referrer_id
CREATE INDEX idx_referrals_referrer_id ON referrals(referrer_id);

-- Function to generate a random referral code
CREATE OR REPLACE FUNCTION generate_referral_code()
RETURNS TEXT AS $$
BEGIN
    RETURN (SELECT string_agg(substr('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(random() * 36 + 1)::int, 1), '') FROM generate_series(1, 8));
END;
$$ LANGUAGE plpgsql;

-- Trigger to set referral_code on new user profile
CREATE OR REPLACE FUNCTION public.handle_new_user_referral_code()
RETURNS TRIGGER AS $$
BEGIN
    NEW.referral_code := generate_referral_code();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

CREATE TRIGGER on_auth_user_created_set_referral_code
  AFTER INSERT ON public.profiles
  FOR EACH ROW EXECUTE PROCEDURE public.handle_new_user_referral_code();
